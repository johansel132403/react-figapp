{"version":3,"sources":["component/AddCategory.js","Helpers/GifHelper.js","component/ItemGifGrid.js","component/GifGrid.js","hooks/useFechtGift.js","component/GifExpertApp.js","index.js"],"names":["Addcategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","call","type","value","onChange","target","getGif","nameCategory","a","fetch","api","json","data","daata","map","resp","id","title","url","images","downsized","ItemGrif","className","src","alt","GridGif","nameProp","loading","datos","setDatos","useEffect","then","img","useFechtG","resImg","SecondApp","names","onClick","ReactDOM","render","document","getElementById"],"mappings":"2LAIaA,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,YAAgB,EAGNC,mBAAS,IAHH,mBAGnCC,EAHmC,KAGvBC,EAHuB,KAyB1C,OAEI,sBAAMC,SAhBa,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACrCN,EAAc,MAWrB,SACI,uBACGO,KAAK,OACLC,MAAOT,EACPU,SA1BW,SAACP,GAEnBF,EAAeE,EAAEQ,OAAOF,a,+BCVjBG,EAAM,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEAEFC,MAAM,yCAAD,OAA0CF,EAA1C,uDAFH,cAEdG,EAFc,gBAGGA,EAAIC,OAHP,uBAGZC,EAHY,EAGZA,KAIHC,EAAQD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,IAAKH,EAAKI,OAAOC,UAAUF,QAXf,kBAgBbL,GAhBa,2CAAH,sDCGRQ,EAAW,SAAC,GAAe,IAAdJ,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAE5B,OACI,sBAAKI,UAAU,yCAAf,UACI,6BAAKL,IACL,qBAAKM,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCHHQ,EAAU,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,aAAmB,ECHpB,SAACmB,GAAc,IAAD,EAETjC,mBAAS,CAC/BmB,KAAM,GACNe,SAAS,IAJsB,mBAE5BC,EAF4B,KAErBC,EAFqB,KA0BtC,OAlBGC,qBAAU,WAENxB,EAAOoB,GACHK,MAAK,SAACC,GAIEH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAI1B,CAACD,IAKCE,EDNuBK,CAAU1B,GAA7BK,EAjBiC,EAiBjCA,KAAMe,EAjB2B,EAiB3BA,QAOd,OAEI,qCACG,6BAAKpB,IAGCoB,EAAU,cAAc,iBAE7B,qBAAKL,UAAU,YAAf,SAGQV,EAAKE,KAAK,SAAAoB,GAAM,OAChB,cAAC,EAAD,eAKIA,GAFCA,EAAOlB,aEUjBmB,EAhDG,WAAK,IAAD,EAEU1C,mBAAS,CAAC,gBAFpB,mBAEX2C,EAFW,KAEL5C,EAFK,KAYlB,OAEI,qCACI,6BAAK,iBAEL,cAAC,EAAD,CAAaA,YAAcA,IAE3B,uBAGA,wBAAQ6C,QAlBS,WAGrB7C,EAAY,CADC,kBACF,mBAAe4C,MAetB,iBAEA,6BAEQA,EAAMtB,KAAK,SAAAP,GAEX,OAAO,cAAC,EAAD,CAGHA,aAAeA,GADVA,YChC7B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6c37faa6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const Addcategory = ( {setCategory} )=>{\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const inputFunction = (e) =>{\r\n\r\n        setInputValue( e.target.value )\r\n\r\n    }\r\n\r\n    const secongFunction = (e) =>{\r\n           e.preventDefault();\r\n\r\n           if( inputValue.trim().length > 2){\r\n               setCategory( call => [ inputValue,...call   ])\r\n               setInputValue(\"\")\r\n           }\r\n           \r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n       \r\n        <form onSubmit={ secongFunction }>\r\n            <input\r\n               type='text'\r\n               value={inputValue}\r\n               onChange={ inputFunction }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddcategory.propTypes ={\r\n\r\n    setCategory: PropTypes.func.isRequired\r\n\r\n}","\r\n export  const getGif = async(nameCategory) =>{\r\n        \r\n    const api = await fetch(`http://api.giphy.com/v1/gifs/search?q=${nameCategory}&limit=10&api_key=lpr5DsZ9Qpegs1gE96PueMTLvlDsB04T`)\r\n    const { data } = await api.json();\r\n    \r\n    \r\n    \r\n    let  daata = data.map( resp =>{\r\n        return {\r\n            id: resp.id,\r\n            title: resp.title,\r\n            url: resp.images.downsized.url\r\n            \r\n        }\r\n    }) \r\n    \r\n    return daata;\r\n    \r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport const ItemGrif = ({title,url})=>{\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <h3>{title}</h3>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { useFechtG } from '../hooks/useFechtGift';\r\n//import { getGif } from '../Helpers/GifHelper';\r\nimport { ItemGrif } from './ItemGifGrid';\r\n\r\n\r\n\r\nexport const GridGif = ({ nameCategory }) => {\r\n\r\n         //esto tambien era parte del primer ejemplo...\r\n                       //EN ESTE COMPONENTE BORRAMOS(useState,useEffect) los hooks para hacer lo de nosotros \r\n\r\n    // const [ img, setImg ] = useState([]);\r\n    \r\n    \r\n   \r\n    // useEffect(() => {\r\n                                       //este fue el primer ejemplo ante de usar el custom hooks\r\n    //     getGif(nameCategory)\r\n    //          .then((img)=>{\r\n    //             setImg(img)\r\n    //          })\r\n    // }, [nameCategory]);   \r\n    \r\n    const { data ,loading }  = useFechtG(nameCategory)\r\n\r\n\r\n\r\n    \r\n   \r\n    \r\n    return (\r\n\r\n        <>\r\n           <h2>{nameCategory}</h2>\r\n\r\n        \r\n               { loading ? 'Cargando...':'Datos Cargados'}\r\n              \r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    data.map( resImg =>(\r\n                    <ItemGrif \r\n                    \r\n                    //aqui estamos enviado 2 cosas el key y las propiedades...\r\n                    key={resImg.id}\r\n                        //con esto aqui puedo hacer facilmente la desectruturacion ya que le pasa todos los item que tiene resImg...    \r\n                    {...resImg}\r\n                    \r\n                    />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport {getGif} from '../Helpers/GifHelper';\r\n\r\n\r\nexport const useFechtG = (nameProp) => {\r\n\r\n    const [datos, setDatos] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n            //estamos llamando a esta funcion desde aqui y el proposito del hook user es para que nada mas se ejecute una vez\r\n        getGif(nameProp)\r\n           .then((img) => {\r\n\r\n            \r\n                    \r\n                    setDatos({\r\n                        data:img,\r\n                        loading:false\r\n                    })\r\n           })\r\n        // se le pone esta propiedad para cuando haiga un cambio en nameProp no se ejecute otra vez \r\n    },[nameProp]);\r\n\r\n\r\n\r\n\r\n return datos;\r\n\r\n}","import React, { useState } from 'react';\r\nimport {Addcategory} from '../component/AddCategory';\r\n\r\nimport { GridGif } from '../component/GifGrid';\r\n\r\n\r\n\r\n\r\nconst SecondApp = ()=>{\r\n\r\n    const [names,setCategory] = useState(['Dragon Ball']);\r\n\r\n    const addAtTheCategory = () =>{\r\n\r\n        let nombre = 'Johansel Perez';\r\n        setCategory( [ nombre, ...names ] );\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        \r\n        <>\r\n            <h2>{\"GifExpertApp\"}</h2>\r\n\r\n            <Addcategory setCategory={ setCategory } />\r\n\r\n            <hr/>\r\n\r\n\r\n            <button onClick= { addAtTheCategory } >Add</button>\r\n\r\n            <ol>\r\n                {\r\n                    names.map( nameCategory=>{\r\n\r\n                    return <GridGif \r\n\r\n                        key={nameCategory}\r\n                        nameCategory={ nameCategory }  \r\n                        \r\n                        />\r\n\r\n                    })\r\n               \r\n               }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n\r\n\r\n    \r\n\r\n}\r\n\r\nexport default SecondApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SecondApp from '../src/component/GifExpertApp'\n\n\nReactDOM.render(\n  \n    <SecondApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}